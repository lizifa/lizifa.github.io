System.register(["./common-legacy-b78b4441.js"],(function(n,e){"use strict";var l;return{setters:[n=>{l=n.c}],execute:function(){const e="<h1>个人对 React 的一些理解</h1>\n<h1>是什么？</h1>\n<ul>\n<li>\n<p>React，用于构建用户界面的 JavaScript 库，只提供了 UI 层面的解决方案</p>\n</li>\n<li>\n<p>遵循组件设计模式、声明式编程范式和函数式编程概念，以使前端应用程序更高效</p>\n</li>\n<li>\n<p>使用虚拟 DOM 来有效地操作 DOM，遵循从高阶组件到低阶组件的单向数据流</p>\n</li>\n<li>\n<p>帮助我们将界面成了各个独立的小块，每一个块就是组件，这些组件之间可以组合、嵌套，构成整体页面</p>\n</li>\n<li>\n<p>react 类组件使用一个名为 render() 的方法或者函数组件 return，接收输入的数据并返回需要展示的内容</p>\n</li>\n</ul>\n<pre><code>class HelloMessage extends React.Component {\n  render() {\n    return (\n      &lt;div&gt;\n        Hello {this.props.name}\n      &lt;/div&gt;\n    );\n  }\n}\n\nReactDOM.render(\n  &lt;HelloMessage name=&quot;Taylor&quot; /&gt;,\n  document.getElementById('hello-example')\n);\n</code></pre>\n<p>上述这种类似 XML 形式就是 JSX，最终会被 babel 编译为合法的 JS 语句调用</p>\n<p>被传入的数据可在组件中通过 props 进行访问</p>\n<h2>特性</h2>\n<p>React特性有很多，如：</p>\n<ul>\n<li>JSX语法</li>\n<li>单向数据绑定</li>\n<li>虚拟DOM</li>\n<li>声明式编程</li>\n<li>Component</li>\n</ul>\n<h2>优势</h2>\n<ul>\n<li>高效灵活</li>\n<li>声明式的设计，简单使用</li>\n<li>组件式开发，提高代码复用率</li>\n<li>单向响应的数据流会比双向绑定的更安全，速度更快</li>\n</ul>\n",t=n("__default",l("intro","简介","/notes/react/intro",e)),i=[];n({page:i,default:i}),n("__module",l("intro","react-js",t.path,e,i))}}}));
